public static int obtener_inicio_secuencia(int[] arr, int inicio){
		while ((inicio < MAX)&&(arr[inicio]==0)){
			inicio++;
		}
		return inicio;
	}
	
	public static int obtener_fin_secuencia(int[] arr, int inicio){
		while ((inicio < MAX)&&(arr[inicio]!=0)){
			inicio++;	
		}
		return inicio-1;
	}
	
	public static void buscar_secuencia(int[] arr, int tamanio) {
	        int inicio, fin;
	        inicio = 0;
	        fin = -1;
	        int tam = tamanio;
	       
	        while ((inicio < MAX - 1)) { // primera secuencia
	            inicio = obtener_inicio_secuencia(arr, fin + 1);
	            if (inicio < MAX - 1) {
	                fin = obtener_fin_secuencia(arr, inicio);
	                if ((fin - inicio) == (tamanio - 1)) {
	                    System.out.println("Empieza en la pos: " + inicio);
	                    System.out.println("Termina en la pos: " + fin);
	                    for (int i = 0; i <= tam-1; i++) {
	                    	corrimiento_izq(arr, (inicio));
	                    	System.out.println("valor de inicio: " + (inicio));
							
						}
	                    
	                 }
	            }
	        }
	    }
	
	
	public static void corrimiento_izq(int [] arrint, int indice){
		while (indice < MAX-1){
			arrint[indice] = arrint[indice+1];
			indice++;
		}
	}