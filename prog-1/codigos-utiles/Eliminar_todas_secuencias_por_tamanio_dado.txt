public static void eliminar_todas_secuencias_por_tamanio(int[] arr, int tamanio){
		int inicio = 0;
		for (int i = 0; i < MAX; i++) {
			eliminar_secuencia_por_tamanio(arr, tamanio, inicio);
		}
	}
	
	public static void eliminar_secuencia_por_tamanio(int[] arr, int tamanio, int inicio){
		int fin,tamanio_secuencia;
		fin = -1;
		while ((inicio < MAX)){
			inicio = obtener_inicio_secuencia(arr,fin+1); //REUTILIZAMOS
				if (inicio < MAX){
					fin = obtener_fin_secuencia(arr,inicio); //REUTILIZAMOS
					tamanio_secuencia = obtener_tamanio_secuencia(arr,inicio,fin);
					System.out.println("El tamanio de la secuencia de "+inicio+" a "+fin+" es "+tamanio_secuencia);
					if (tamanio_secuencia == tamanio){
						for (int i = 0; i < tamanio; i++) {
							corrimiento_izq(arr, inicio);
						}
					}
				}
		}
	}
		public static int obtener_tamanio_secuencia(int[] arr, int inicio, int fin){
		int tamanio = 0;
		while (inicio <= fin){
			tamanio++;
			inicio++;
		}
		return tamanio;
		}
	
	public static int obtener_inicio_secuencia(int[] arr, int inicio){
		while ((inicio < MAX)&&(arr[inicio]==0)){
			inicio++;
		}
		return inicio;
	}
	
	public static int obtener_fin_secuencia(int[] arr, int inicio){
		while ((inicio < MAX)&&(arr[inicio]!=0)){
			inicio++;	
		}
		return inicio-1;
	}
	
	public static void corrimiento_izq(int [] arrint, int indice){
		while (indice < MAX-1){
			arrint[indice] = arrint[indice+1];
			indice++;
		}
	}